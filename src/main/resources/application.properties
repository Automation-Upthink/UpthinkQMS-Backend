spring.application.name=qms
spring.config.import=optional:file:.env.local

## Cognito OAuth2 Client Configuration
spring.security.oauth2.client.registration.cognito.client-id=7hssrapn8l03o8tf5gcts6lr1m
spring.security.oauth2.client.registration.cognito.client-secret=
spring.security.oauth2.client.registration.cognito.scope=openid, profile, email
spring.security.oauth2.client.registration.cognito.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.cognito.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.cognito.client-authentication-method=none
spring.security.oauth2.client.registration.cognito.client-name=Cognito
spring.security.oauth2.client.provider.cognito.issuer-uri=https://cognito-idp.ap-south-1.amazonaws.com/ap-south-1_nMR6XCfv6
spring.security.oauth2.client.provider.cognito.authorization-uri=https://queue-manager.auth.ap-south-1.amazoncognito.com/oauth2/authorize
spring.security.oauth2.client.provider.cognito.token-uri=https://queue-manager.auth.ap-south-1.amazoncognito.com/oauth2/token
spring.security.oauth2.client.provider.cognito.user-info-uri=https://queue-manager.auth.ap-south-1.amazoncognito.com/oauth2/userInfo
spring.security.oauth2.client.provider.cognito.jwk-set-uri=https://cognito-idp.ap-south-1.amazonaws.com/ap-south-1_nMR6XCfv6/.well-known/jwks.json

aws.cognito.userPoolId=ap-south-1_nMR6XCfv6
#aws.cognito.userGroup=USER

# AWS Configuration
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretKey=${AWS_SECRET_ACCESS_KEY}
aws.region=ap-south-1
qmBucket=qms-essay-storage
functionName=sls-qm-automation-script

# Logging
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter=DEBUG
logging.level.org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter=DEBUG
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
logging.level.com.amazonaws=DEBUG
logging.level.com.amazonaws.request=DEBUG
logging.level.com.amazonaws.response=DEBUG
logging.level.com.upthink.qms.service.CognitoService=DEBUG


# Gsheet
gSheetId=1neTzUxzlkLFO-POU2LHkUR7ba5EK56cvo493uRjTAOY
personSheetName=QM_Analytics
essaySheetName=Essay_details
yesterdaySheetName=Yesterday_Analytics


# Database Configuration
#spring.datasource.url=jdbc:postgresql://automation-qms-database.c7ou0qyagttu.ap-south-1.rds.amazonaws.com:5432/qmsdev
#spring.datasource.url = jdbc:postgresql://localhost:5433/postgres
spring.datasource.url=jdbc:postgresql://prod-qms-instance-1.c7ou0qyagttu.ap-south-1.rds.amazonaws.com:5432/postgres
spring.datasource.username=Aurora_QMS_DB
spring.datasource.password=AutoUT#2024
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Connection Pool Settings (optional but recommended for production)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.pool-name=QMSHikariPool


# Flyway Configuration
#spring.flyway.url=jdbc:postgresql://localhost:5432/qmsdev
#spring.flyway.user=postgres
#spring.flyway.password=12345678
#spring.flyway.locations=classpath:db/migration
#spring.flyway.enabled=true
#spring.flyway.baseline-on-migrate=true

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.com.upthink=DEBUG
logging.level.org.flywaydb=DEBUG

server.error.whitelabel.enabled=false
server.error.path=/error